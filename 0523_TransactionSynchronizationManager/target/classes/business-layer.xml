<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

 
	<!-- Annotation 기반의 AOP 설정 -->
	<aop:aspectj-autoproxy />
 
	<!-- Annotation 기반의 IoC 설정  -->
	<context:component-scan
		base-package="com.min.biz"/>


	<!-- Spring과 JPA 연동 설정 <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean> 
		<bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter"/> <property name="dataSource" 
		ref="dataSource"/> </bean> -->
	<!-- JdbcTemplate 등록 -->
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- DataSource 등록 -->
	<context:property-placeholder
		location="classpath:datasource.properties" />

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- MyBatis에서 가장 핵심적인 객체는 SqlSession이라는 존재와 SqlSessionFactoryBean이다. -->

	<!-- Spring과 MyBatis sqlSessionFactory 연동 설정 -->
 

	<!-- sqlSessionTemplate -->
 
	 
<!-- mybatis-spring 설정 

	<mybatis-spring:scan
		base-package="com.min.biz.mapper" annotation="org.apache.ibatis.annotations.Mapper" />

--> 

	<!-- Transaction 설정 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="txPointcut"
			expression="execution(* com.min.biz..*Impl.*(..))" />

		<aop:advisor pointcut-ref="txPointcut"
			advice-ref="txAdvice" />
	</aop:config>
 

</beans>

















